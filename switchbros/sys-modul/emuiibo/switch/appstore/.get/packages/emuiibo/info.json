{
  "title": "emuiibo",
  "author": "XorTroll",
  "category": "tool",
  "version": "0.6.4",
  "url": "https://github.com/XorTroll/emuiibo/releases",
  "license": "GPLv2",
  "description": "MitM'ing NFP services for Amiibo emulation!",
  "details": "Usage\\nThis Download installs for both Atmosphere and ReiNX.\\n\\nAccording to tests, should work on any CFW which allows NSP sysmodules (Atmosphere, ReiNX).\\n\\nYou also have to set the boot2 flag, whose location depends on the CFW:\\n\\nAtmosphere: create a file named boot2.flag inside titles/0100000000000352/flags directory.\\n\\nReiNX: create a file named boot2.flag inside titles/0100000000000352 directory.\\n\\nCombos\\nAll the input combos are performed with R-Stick pressing and pressing the D-pad in an specific direction (at the same time). Combos must (should) be done before or after the game starts looking for amiibos.\\n\\nToggle amiibo emulation: Press R-Stick (like it was a button) and also pressing the D-pad up. Toggles/untoggles emulation.\\n\\nToggle amiibo emulation once: Same as above, but pressing the D-pad right. Toggles emulation once, after emulating an amiibo then it will untoggle automatically.\\n\\nUntoggle amiibo emulation: Same as above, but pressing the D-pad down. Untoggles amiibo emulation, and should be used as a way to fully ensure it is untoggled, in case you don't know whether it's toggled or not.\\n\\nSwap amiibo: Same as above, but pressing the D-pad left. Moves to the next amiibo in the amiibo directory, if last one starts again with the first one. Only has effect if amiibo emulation is toggled.\\n\\nEmuiibo's amiibo directory is sd:/emuiibo. Place your amiibo dumps (must be *.bin files) there.\\n\\nAmiibo emulation\\nEmuiibo gets amiibo's data, but the register info (amiibo name, write dates, mii) is auto-generated, as it isn't present on amiibo dumps:\\n\\nName will be the file's name (Amiibo.bin -> Amiibo), but if the name is bigger than 10 chars it will be hardcoded to Emuiibo.\\n\\nWrite date is hardcoded to 15th June 2019.\\n\\nThe amiibo's mii (owner) is hardcoded to the first mii found in the console mii database.\\n\\nAmiibo dumps\\nDumps consist on *.bin files, which must be 540 bytes (perhaps even more?). They can be dumped with several tools.\\n\\nFor developers\\nThis MitM process also hosts a custom service, nfp:emu, which can be used to control amiibo swapping and emulation by IPC.\\n\\nYou have an implementation for C/C++ and libnx in here.\\n\\nCredits\\nAll the persons who contributed to the nfp-mitm project before me: Subv, ogniK, averne, spx01, SciresM\\n\\nlibstratosphere libraries (SciresM again)\\n\\n\\n.\\n",
  "changelog": "0.6.4\\n\\nFixed some minor issues related to virtual amiibo area saving\\nFixed a weird internal issue where sometimes emuiibo would become unaccessible under certain circumstances\\n\\n0.6.3\\n\\nFixed support for latest Atmosphere versions (0.19.x) and for 12.x system updates. Note that this emuiibo version (and next ones) won't work on older Atmosphere versions.\\n\\n0.6.2\\n\\nSmall nx library corrections/improvements\\nAtmosphere 0.18.0 support (always use emuiibo with latest ams if it's supported!)\\n\\n0.6.1\\n\\nFixed controller support - some games couldn't be used with detached JoyCons / other controllers on v0.6, that has been fixed on this version.\\n\\nWhen exporting system miis on startup, now emuiibo doesn't use the mii's name as the mii folder's name, the mii's name is written to a name.txt file instead to avoid potential FS issues with non-UTF8 names, and the mii folder's name will just be an index.\\n\\n0.6\\n\\nemuiibo has been through a complete rewrite in Rust ðŸ¦€ (except for the overlay), so everything has changed internally:\\n\\nSupport for latest Atmosphere (0.14.4), and next releases unless breaking changes are introduced\\n\\nemuiibo no longer handles conversion of raw amiibo dumps or old emuiibo formats - only the current format is supported (the one used since 0.5.x)\\n\\nHeap size has been considerably reduced (last version used 0x40000, current one only uses 0x4000!) - in addition, the exefs NSP's size has been reduced too, being now 5 times smaller than 0.5.x\\n\\nRegarding the known issues with time services and sysmodules, emuiibo no longer makes use of this service to avoid creating more issues, even though this implies that virtual amiibos' \"last write date\" won't be set when a virtual amiibo is modified - luckily, not emulating this anymore doesn't change anything relevant nor break anything\\n\\nemuiibo's IPC interface other processes may use to communicate with it has a minor change - thus, 0.5.x or older overlays WON'T WORK with this version's emuiibo!\\n\\n0.5.1\\n\\nNote: this is nothing more than a quick update in order to support latest CFW - emutool wasn't even updated, the only thing which changed is its version number, and emuiibo has no relevant changes other than small bugfixes.\\n\\nUpdated libnx, libstratosphere/Atmosphere-libs and JSON libraries. emuiibo requires C++20 now, as Atmosphere-libs do so.\\n\\nChanged size from 0x20000 to 0x40000 to avoid some memory issues people experienced.\\n\\nFixed a small bug when dumping console miis to the SD card on startup.\\n\\n0.5\\n\\nemuiibo has been completely rewritten, and this has been incredibly helpful, since almost any issue present for previous versions is no longer a problem ;)\\n\\nKey combos are no longer a thing, since they were a not very friendly way of controlling emuiibo, and having an overlay is 100 times more helpful.\\n\\nThe way emuiibo internally \"mimics\" Nintendo's amiibo services has been improved a lot. This was what caused many games to not work fine (Link's Awakening, Diablo 3, Fire Emblem...). In fact, emuiibo is introducing a new feature which makes amiibo emulation slightly more similar to real amiibos, which made those specific games work (see below).\\n\\nVirtual amiibo connecting/disconnecting: these two are the equivalents of placing a real amiibo in the NFC point/R-stick (connecting it) and removing it from that spot (disconnecting it). Previously, emuiibo \"tried\" to take care of that manually (games like SSBU asked the user to remove the amiibo after saving progress), which resulted in many games freezing when they read amiibos. Now, simply disconnect the amiibo when you need to remove it, and connect it to use it again!\\n\\nSupport for raw bin amiibo dumps works now (it was broken for v0.4)\\n\\nOld (v0.3.x and v0.4) amiibo formats are converted on startup, so no need to create new amiibos, old ones should work :)\\n\\nIPC API changed completely, check the overlay's source as an example of how it works.\\n\\nNow logs are reset on each reboot, so make sure to not reboot or make a copy of emuiibo's log file if wou want to preserve them! (this was done since the log file would get excessively big if it wasn't cleaned)\\n\\nThis is a new addition to the project and, probably, the best and easiest way of controlling emuiibo (thanks to WerWolv for such an amazing project)!\\n\\nThis are its current features:\\n\\nToggle on/off emulation\\n\\nControl virtual amiibo emulation with emuiibo, select a virtual amiibo as active, connect/disconnect it (see above)\\n\\nBrowse through categories, keep your virtual amiibos organized\\n\\nSee in real time if the currently opened game is being intercepted by emuiibo (if you have the overlay open while the game runs, you might be able to spot the exact instant in which emuiibo intercepts the game's amiibo access)\\n\\n\\n\\n0.4\\n\\nemuiibo was updated to latest libnx and libstratosphere, what might fix possible bugs those had before. (libstratosphere's new IPC API is far more accurate now)\\n\\nInternal heap usage was decreased from 0x75000 to 0x5000. (almost 24 times less heap!)\\n\\nSeveral implementation mistakes were corrected, which might have caused issues.\\n\\nThose problems with certain amiibos (mainly BOTW ones) have been fixed, which were caused by a bad handling of amiibo IDs (N sends them in a slightly different way)\\n\\nNow emuiibo has a settings file: settings.json inside emuiibo's directory. The only setting it has for now is whether input combos are enabled, and this defaults to true.\\n\\nIf you want to disable input combos, just edit the file and change the field comboEnabled from true to false, or the opposite to re-enable them.\\n\\nAdded logging, so that most interactions are logged to a logging file (emuiibo.log) in emuiibo's directory, to help with potential issues.\\n\\n0.3.1\\n\\n9.0.0 support\\n\\n0.3\\n\\nEmuiibo has been fully rewritten, what involves several changes:\\n\\nAmiibo moves should be faster now since on previous versions the amiibo dir would be re-scanned (thus iterated over every amiibo) each time user moved to the next amiibo.\\n\\nAmiibo structure and filesystem layout have changed to a WAY more proper one. (see below)\\n\\nNew amiibo structure - dumps no longer required!\\n\\nThe only relevant part of an amiibo is its unique ID (the rest can be emulated), thus having online databases of this IDs, dumps are useless, but still supported ;)\\n\\nAmiibos go now inside /emuiibo/amiibo/ for a better directory layout. Don't worry about backwards compatibility. (see below)\\n\\nAmiibos can be placed inside /emuiibo/amiibo// to be only used in that specific game. Amiibos outside those directories will be used on any game.\\n\\nBackwards compatibility for any kind of amiibo, considering that 3 types exist: single dumps, 0.2.x format and the new 0.3+ format\\n\\nSay hello to a new tool to create virtual amiibos easily - emuGUIibo!\\n\\nMade using Windows Forms, so should be supported by Mono\\n\\nAccesses a full amiibo list from an online API, so the user just has to select an amiibo and customize it!\\n\\nAmiibos are generated on the user-specified directory. If a drive with /emuiibo directory is detected, emuGUIibo will assume it's a console's SD card and default (but not force) that path.\\n\\n(Probably developer only) nfp:emu service changes:\\n\\nCommands were renamed and reordered, so make sure you update your implementation.\\n\\nAdded new command to get emuiibo version by 3 integers (major.minor.micro)\\n\\n0.2.1\\n\\n8.1.0 support, working as always\\n\\nA new command was introduced in nfp:emu (RescanAmiibos)\\n\\n0.2\\n\\nAmiibo progress saving support\\n\\nGames like SSBU allow saving their progress on amiibos. Now this is supported by redirecting savedata to files inside amiibo's \"areas\" directory.\\n\\nThis, in fact, provides another advantage, as real amiibos just allow savedata for one title, while this system allows to have multiple saves.\\n\\nAmiibo system changed\\n\\nFirst of all, don't worry. All amiibo BIN files found in emuiibo dir will be auto-converted to the new system.\\n\\nThe new system has every amiibo in a different directory, which contains the amiibo (\"amiibo.bin\"), a JSON metadata file (\"amiibo.json\"), an \"areas\" directory (see above) and a mii char-info copy (\"mii.dat\").\\n\\nOn this system everything can be customized. In order to change miis you would need the char-info data, which is stored inside the console. To help with this, emuiibo will dump all console miis inside \"miis\" directory in emuiibo dir, named with the index + mii name (example: \"0-XorTroll.dat\"). To use it, copy to the amiibo dir and name it as \"mii.dat\".\\n\\nAn interesting option can be added to the JSON (\"randomizeUuid\" boolean), which makes emuiibo randomize the amiibo UUID. Having this means special circumstances in certain games, like being recognized as a different amiibo each time in BotW, hence infinite supply.\\n\\nIMPORTANT! After using 0.2, since the old system gets changed to the new one, 0.1 won't find any amiibos as they're not on the root dir now. Thus, avoid using 0.1 after using 0.2.\\n\\nHOME button LED blink (7.x+, sadly)\\n\\nOn firmwares on 7.x or higher, performing a combo makes the HOME button blink, which is a simple and nice system to signal that a combo has been performed. Not supported on previous versions for technical limitations.\\nnfp:emu service changed, with new commands\\n\\nAlso, a remainder that the next Goldleaf version (0.6) is going to have emuiibo support, featuring real amiibo dumping to emuiibo-style and more!\\n\\n"
}