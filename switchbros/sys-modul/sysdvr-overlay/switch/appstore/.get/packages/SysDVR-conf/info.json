{
  "title": "SysDVR",
  "author": "exelix11",
  "category": "advanced",
  "version": "6.0",
  "url": "https://github.com/exelix11/SysDVR/releases",
  "license": "GPLv2",
  "description": "Capture switch games directly on your PC via network",
  "details": "This is an experimental sysmodule that allows capturing the running game output to a pc via USB or network connection.\\nTwo versions are provided:\\n\\nSysDVR.zip is the \"full\" version, can stream using both modes and comes with an homebrew app to switch between them\\nSysDVR-USB-Only.zip(not included in this download) will only stream via USB but uses less memory and should run alongside multiple sysmodules.\\nYou should use the full version unless you have specific requirements.\\n\\nTo play the stream mpv player is recommended as it's the most straight forward to set up, any other player that supports raw h264 streams via tcp or stdin should work but you may have to configure it manually.\\n\\nLimitations\\nVideo quality is fixed to 720p @ 30fps with h264 compression (hardware limit)\\nAudio quality is fixed to 16bit PCM @ 48kHz stereo. Not compressed\\nOnly works on games that have video recording enabled (aka you can long-press the capture button to save a video)\\nVideo and audio are two different streams, they're likely to desync as they require two different player instances. Vlc does support a secondary audio stream but i didn't manage to get it working properly.\\nOnly captures game output. System UI, home menu and homebrews running as applet won't be captured\\nVideo feed is not realtime, there will always be a minimum of ~1 second of delay.\\nStream quality depends heavily on the environment, bad usb wires or low wifi signal can affect it significantly.\\nUSB streaming is not available when docked\\nRequires firmware >= 6.0.0\\nClearly with these limitations this sysmodule doesn't allow \"remote play\" and does not replace a capture card.\\n\\nUsage\\nSetting up the sysmodule\\nThe provided builds already contain the correct file structure, you should just be able to extract them to your sd card.\\nCFWs other than atmosphere should work but I won't provide support for them.\\n\\nBy default SysDVR will stream over network, to switch between modes and set the default one you can use the SysDVR Settings homebrew included in the zip.\\n\\nNetwork streaming\\nThis is the easiest way to stream, In this mode the sysmodule is completely standalone, you should be able to play the video stream just by running mpv tcp://<switch ip address>:6666 --no-correct-pts --fps=30 and mpv tcp://<switch ip addr>:6667 --no-video --demuxer=rawaudio --demuxer-rawaudio-rate=48000 for audio.\\nWhen using network streaming it's not recommended to stream both audio and video at the same time as it may cause slowdowns. In general network streaming has more lag and delay compared to USB, it is worth the time to set it up, especially for gameplay recording.\\n\\nUSB streaming\\nTo stream via usb you need the UsbStream program, it's built using .NET core and is compatible with linux as well.\\nFirst of all you should make sure to install .NET core 3 on your pc, then proceed to setup the drivers, this step is needed only the first time:\\n\\nDriver setup on windows\\nOn windows you may get the device not found or platform not supported errors or very bad performance on the stream, in this case you may have the wrong driver set up.\\nPlug your switch in the computer while running SysDVR in USB mode and launch zadig install the libusb-win32 driver for the \"Nintendo Switch\" device. Before installing make sure the target device USB ID is 057e 3006, if it's different the sysmodule may not be running, try waiting a bit (it should start around 20 seconds after the console boot) or check again your setup.\\nThis won't interfere with other applications that communicate with the switch via usb as this sysmodule uses a different product id.\\n\\nDriver setup on linux\\nOn linux you may have errors about loading the libusb-1.0 library, this happens when the file name is different than the one expected by dotnet, you can make a symlink as described on the LibUsbDotNet repo:\\nsudo find / -name \"libusb-1.0*.so*\" and then\\n\\ncd /lib/x86_64-linux-gnu\\nsudo ln -s libusb-1.0.so.0 libusb-1.0.so\\n(Example commands, change the paths with the one you find on your pc)\\n\\nStreaming\\nMost Windows users can simply use UsbStreamGUI, it will allow you to select the streaming mode and launch UsbStream directly.\\n\\nLinux users will have to use the UsbStream command line interface (Note that this is available on windows too and provides a few more options compared to UsbStreamGUI)\\nLaunch UsbStream like this: UsbStream video <streaming mode> <arg> audio <streaming mode> <arg>\\nThese are valid streaming modes:\\n\\nstdin : pipes the received data directly to a video player via stdin, this will use no caching so you'll have low delay but it may lag. This will likely require you to provide the args to pass to the player, you can do so like this: video stdin <player executable> args \"<args list>\"\\nmpv : same as stdin but will automatically set up the args for mpv so it just requires the path\\ntcp : opens a tcp server so players can connect to it and use their own caching mechanism to remove or reduce lag (at the price of an higher delay)\\nfile : writes the received data directly to a file so it can be converted to a common format later.\\nWhen using mpv the arg is the path of mpv on your pc (use the .com file on windows), you have to repeat it twice if using both streams.\\nThe tcp option requires a free port number and the file option the output file path.\\nTo disable a stream just omit the name and its fields.\\n\\nExample commands:\\n\\nUsbStream audio mpv C:/programs/mpv/mpv : Plays audio via mpv located at C:/programs/mpv/mpv, video is ignored\\nUsbStream video mpv ./mpv audio mpv ./mpv : Plays video and audio via mpv (path has to be specified twice)\\nUsbStream video tcp 1337 audio file C:/audio.raw : Streams video over port 1337 while saving audio to disk\\nLaunching UsbStream without any parameter will display more options and examples.\\nTo connect to the tcp streams you can use: mpv tcp://localhost:<video port> --no-correct-pts --fps=30 for video and mpv tcp://localhost:<audio port> --no-video --demuxer=rawaudio --demuxer-rawaudio-rate=48000 for audio\\n\\nTips\\nTo get the most out of this sysmodule you will have to do some testing to find configuration that works best for you, here are some tips and useful information:\\n\\nIf the video stream doesn't start immediately try moving the camera around in the game, to display something the video player needs to acquire a video keyframe first.\\nAn usb 3 wire is slightly better than usb 2, but both should work.\\nQuality also depends on the cpu utilization of the game you're running, OC can improve performances.\\nUsing cache will reduce lags at the cost of an higher delay, for mpv it's on by default (except when using usb stream with mpv mode), if you want to try without it the command line arg for mpv is --cache=no --cache-secs=0. There's a lot of room for experimenting here, try different values to find the combination that works best for you.\\nIf using no caching when the screen goes full black or white (eg loading screens) it may cause some desync and the stream will start to drop frames, eventually it will fix by itself but it could take some time, the fastest solution is to open the home menu for a few seconds and then resume the game, for usb stream you can try setting the --desync-fix flag (this will introduce glitches).\\nCommon issues\\nAfter copying the sysmodule to the sd atmosphere won't boot anymore\\nThis happens if you have too many sysmodules or ones particulary heavy like sysftpd, remove them to launch SysDVR.\\nIf you really need other sysmodules at the same time you can try using the USB-Only version as it uses less memory (512K vs 3MB)\\nTo remove SysDVR delete the /atmosphere/titles/00FF0000A53BB665 folder, to remove other sysmodules if you're not sure about the right ID delete the whole /atmosphere folder and download a fresh copy of atmosphere.\\n\\nHomebrews using USB like GoldLeaf or nxmtp won't launch anymore\\nThis is because the USB interface is being used by SysDVR, if you're using the full version you can swith streaming modes using the SysDVR Settings homebrew included in the zip.\\n\\nWhen using network stream there's a lot of delay or it increses over time\\nMpv will use a cache buffer to avoid lag when the connection drops some packets but this increases delay, you can disable it by using --cache=no --cache-secs=0\\n\\nThe video is laggy or there are a lot of glitches\\nMake sure the connection between the console and your pc is good enough, if streaming via network move both closer to the router or switch to LAN, for USB try using an higher quality wire.",
  "changelog": "6.0\\n\\nSysDVR Client now comes with a completely rewritten cross-platform GUI, no matter what operating system you're using you will get the new user interface, there is no more need to use the command line\\nHowever, the command line interface is still available and mostly compatible with the previous syntax. Note that some features were dropped, you can run SysDVR-Client --help to see the new commands.\\nSysDVR Client is now available for Android\\nThe android version only supports Android 10 and later only on devices with a 64-bit version of Android. This limits compatibility with older smart TVs and chromecasts but it's an unfortunate limitation of dotnet.\\nAs of 6.0, SysDVR Client is only distributed on this GitHub page, any reupload on the play store or other stores is not official and you should not download it.\\nThe new GUI supports capturing video clips and screenshots in real-time\\nIntroduced support for local network discovery\\nThe client is able to detect consoles in your local network and connect to them, no more typing IP addresses !\\nThe protocol is also completely documented on this repo in case you want to build your own client\\nSysDVR Client is now built as a native app, this means it will just work™ without the need of installing dotnet\\nStarting with this update you will need to download the exact release for your operating system and CPU architecture\\nFor architectures not covered here (most notably raspberry pi and windows on arm) you can download the old-style cross platform build called SysDVR-Client-dotnet.7z and configure dotnet 8 and the needed native libraries on your own, refer to the manual install section of the guide.\\nSome client features were dropped during the rewrite, depending on requests from users they may be rentintroduced in future updates, in particular, the following features are no longer available:\\nStreaming to other players using the --stdout and --mpv options\\nRelaying the stream with the --rtsp option on the client. The on-console RTSP server \"Simple network mode\" is still available.\\nCommand line video recording with the --file option\\nMultiple fixes for bugs reported by users:\\nFixed video recording not working on linux\\nFixed audio not working on mac os\\nAdded an alternative audio output option for Windows computers where audio would not work\\n\\n5.5.6\\n\\nFix discord screenshare crashing SysDVR-Client #235\\nAuto reconnect when streaming in USB mode even if the console is unplugged\\nThis will try to find the same console by serial number, if you modified it with prodinfo editing tools and attach multiple consoles at the same time it may not work as expected.\\nThis is a client-only update, the sysmodule is the same as version 5.5.5\\n\\n5.5.5\\n\\nFix network mode disconnection issue #226\\nThis issue requried increasing the socket buffer sizes so SysDVR now uses more memory than v5.5, unfortunately i couldn't find any way around it, it's still better than 5.4 and previous version but not as good as 5.5.\\nAdded a splash screen to replace the white screen shown while connecting\\nIntroduce audio/video stream synchronization in the built-in player: SysDVR will automatically attempt to sync the streams to avoid delays\\nThe correction delay scales over the number of errors detected, in bad network condition you may feel some delay because the player gives up synchronization to avoid stuttering, opening the home menu at any time will resync the streams.\\nIf you encounter stuttering this feature can be disabled in the advanced settings of the GUI or with the command line argument --debug nosync\\nIntroduce duplicate keyframe dropping: When SysDVR on the console detects many duplicated packets in a short period of time it will stop sending them to save bandwidth and reduce delay.\\nThe effectiveness of this feature depends on the game, since it may cause visual artifacts this feature can be disabled in the advanced settings of the SysDVR-Settings homebrew.\\nImproved scheduling of the video frames in the built-in player: reduces occasional stuttering that was not related to the channel bandwidth.\\nImproved handling of .bat launcher files created by the GUI, now they can be placed everywhere and properly check that the needed paths exist\\nSome command line arguments have changed, in particular the --print-stats option has been renamed to --debug stats\\n\\n5.5\\n\\nCompletely fixed USB mode crashes and stuck in \"switching modes\" issues, for real this time.\\nThe communication protocol changed, make sure to update both the client on your pc and the sysmodule on your console.\\nAfter copying the sysmodule reboot your console.\\nOn Windows now we use a new WinUSB driver signed by Google.\\nSysDVR will appear as an android device using standard ADB drivers\\nIn practice this won't change anything except that now installing drivers is much more streamlined and they come from a more trusted source.\\nMemory usage of the full version of SysDVR has been substantially reduced.\\nIn general this means SysDVR should cause less crashes when used with other sysmodules\\nIf you were using the usb only version due to memory concerns give the full version another chance.\\nNow SysDVR-Client is also distributed as a flatpak, this should make installing it on linux much easier solving all dependency issues\\nFor the time being flatpak support is considered experimental due to limited testing, let me know of any issues\\nInstructions to install the flatpak version have been added to the guide\\nFix connection issues when in TCP Bridge mode\\nFix libusb errors on arm macs\\nMinor bug fixes\\n\\n5.4\\n\\nSysDVR-settings can now update dvr-patches from github releases automatically\\nThis feature works for USB-Only versions too however the USB-Only builds don't come with the settings app, you can get the NRO manually from the regular release\\nMost \"mode switching\" errors should have been solved\\nFix rtsp mode which has been broken probably since update 5.0 and no one noticed\\nOther minor fixes\\n\\n5.3.1\\n\\nAutomatic driver installation with libwdi on Windows\\nIf this is the first time you use SysDVR just open the GUI and you will be prompted to install the driver when you try to stream, if you already installed it with zadig nothing changes.\\nThis means that zadig is not needed anymore, if you're following a guide that requires it is outdated\\nThe official guide in the wiki has been updated to reflect this\\nLinux and mac users: ffmpeg (libavcodec) has been updated to version 59, if you still have the old 58 version update it with you package manager\\nBetter native dependency handling on MacOS and linux\\nFor MacOS all the dylib loading problems should be fixed now, you just need to install the libraries with brew\\n\\n5.3\\n\\nSysDVR-Client is now built with .NET 6, if you're still using .NET 5 you must update.\\n    Remember to choose the x64 version if your windows install is 64-bits or it won't work.\\n    If after installing it SysDVR can't find it manually fix your PATH environment variable\\nArm \"apple silicon\" macs are now supported and should work as expected #166\\n    If you previously used SysDVR over rosetta you must install native arm .NET and native arm dependencies with brew, refer to the guide for more info.\\nThe USB protocol has been improved, stuttering should be gone now.\\n    This means that latest client is not compatible with older sysdvr versions and vice versa, make sure to update the sysmodule on your console and reboot afterwards.\\nImprovements of the video decoding process, the client should use less CPU now.\\nNow it's possible to set the video player title with the --title command line option #170\\nOther minor improvements\\n\\n5.2\\n\\nCompatibility with dotnet 6, you won't have to download an outdated version to run SysDVR-client anymore. (dotnet 5 still works)\\nSupport for streaming from multiple consoles over USB\\n    By default SysDVR-client will connect to the first available console it finds, the serial is shown in the command window\\n    You can specify which console to connect to by adding --usb-serial your_serial to the command line, partial serials are matched by the last digits, for example --usb-serial 123 will connect to any console whoose serial ends with 123\\n    This feature won't work if sysdvr can't find the console serial, this can happen if you used prodinfo editing tools.\\nWhen using the built-in player you can add the --fullscreen option to the command line to automatically switch to full screen #138\\nFix a bug where sysdvr would get stuck on switching modes and required a reboot #132\\nWhen in full screen mode the window shouldn't disappear when it loses focus #161\\nWhen in full screen mode the mouse cursor is hidden #133\\nThe SysDVR-settings homebrew shouldn't crash anymore when SysDVR isn't running #165\\n\\n5.1\\n\\nFixed random image corruption in certain games, used to happen especially on still images #91\\nFixed USB errors on linux #106\\nExport recordings as mp4 files #104\\nThe recorded data is not processed to keep the cpu usage low, the output file may be big and not all video players may be able to play it. It's recommended to remux/re-encode the file after recording, an easy way of doing that is with ffmpeg: ffmpeg -i video.mp4 -c:v h264 -c:a aac output.mp4\\nWhile this seems to work well enough i didn't thoroughly test it with long recordings, please let me know of any issues.\\nReduced stuttering in the built-in video player\\nThe \"simple network mode\" RTSP server should now be more reliable and works in most video players\\n\\n\\n5.0.2\\n\\nFix USB on 11.0\\nFix scaling for the built-in player when using a monitor that's not 16:9\\n\\n5.0.1\\n\\nThis updates adds minor features and fixes issues reported by users.\\nOnly the client app was updated the sysmodule still shows version 5.0 but it has been reuploaded for convenience.\\n\\nChanges:\\n\\nAdded full screen mode for the built-in player, press F11 to toggle it (#98).\\nAdded scale filters for the built-in player, now the streaming should look better on high resolution screens.\\nShow a warning when running on Windows with an unsupported (x86) .NET runtime (#97).\\nFix a crash when using an audio device with more than two channels (#94).\\nShow current PID in the player titlebar to allow streaming software to distinguish between multiple instances.\\nMinor fixes.\\n\\n5.0\\n\\nSysDVR-Client was upgraded to the just released .NET 5.0 so we match numbers. Make sure to download it before trying this update.\\nCustom built-in video player to ensure best performances, brings down latency to about 100ms or less, literally can't get better than this.\\nThe built-in player uses ffmpeg and SDL2. Dlls are included for windows 64-bit, on mac and linux you can install them from your package managers, i added example commands in the guide.\\nAs for 32 bit Windows ffmpeg officially doesn't provide 32 bit builds anymore. If you're still using a 32 bit PC you can get unofficial builds from third parties and extract them to the SysDVR-Client folder, this should work but i'm not providing support for it, you should upgrade your PC.\\nThe implementation is still pretty rough and there's room for improvement but it's already a major step up from mpv, looking forward to user feedback.\\nAll the previous streaming modes are still avalilable, you can see them with the --help option\\nNew settings app with a proper GUI, explainations and links to the guide.\\nSysDVR-Client GUI has been updated to be simpler to use: only select USB or type the IP and click launch to stream.\\nTweaked some timing and threading priorities that should improve performances on the console side\\nDue to the limited testing i can do on my own i don't know if these changes have any negative side effects, i didn't notice anything wrong but in case of problems like lag in games or degraded performances let me know and i'll revert it if it's necessary.\\nAdded support for 32 bit arm in SysDVR-Client, now it can run on many single board computers like the raspberry pi\\nDepends on .NET support for your board. Raspberry pi zero and 1 are not supported due to older arm version.\\nWill most likely need manual configuration of hardware accelerated decoding to run smoothly, there's an explaination here\\nDue to the changes to SysDVR-Client the command line arguments have slightly changed as well, this will likely break launch scripts generated by the GUI, make sure to delete them and create new ones with the latest version.\\nThe guide has been updated with all the new features, check it out.\\n\\n4.0.1\\n\\nGeneral system stability improvements to enhance the user's experience:\\nReduced the number of FS sessions used by the sysmodule, should fix crashes when running alongside other sysmodules.\\nFix a possible crash on windows versions that don't use the english alphabet.\\n\\n4.0\\n\\nLow latency streaming is now supported.\\nStdin mpv streaming mode has been revamped to support low latency video streaming.\\nUnfortunately the console produces audio with a slight delay, this means that real-time streaming audio and video is not possible. This is not a bandwidth problem and even streaming just audio will be slightly delayed.\\nStreaming both audio and video is possible only via RTSP as stdin mode only supports one channel. Read the advanced section of the guide to find out how to launch mpv in low-latency mode.\\nUSB streaming protocol has been updated to improve performances.\\nOn windows the driver has been changed to WinUsb, if you previously installed the libusb driver you will have to replace it with zadig. The guide has been updated to explain how.\\nIf you wish to keep on streaming with libusb add --no-winusb to the command line or enable Force LibUsb backend in the GUI.\\nOn linux libusb is still used and nothing changes.\\nTCPBridge protocol has been changed as well to improve performances.\\nReduced the memory usage of SysDVR from 3MB to ~1.1MB if you previously used the USB-only build due to memory concerns check if this solves your problems.\\nThis may also fix SXOS compatibility but i haven't tested, will update once someone lets me know.\\nEdit: from early user reports SXOS seems to work fine, please comment in issue #39 if you still experience crashes.\\nAll legacy args for SysDVR-Client have been replaced with a new syntax, less used functions have been removed, if you're using bat files from the GUI delete them and create new ones.\\nDue to the protocol changes you can't use previous versions of the client and clientGUI with the new sysmodule\\nNow it's possible to stream to stdout so you can pipe the raw data to any video player (one channel only)\\nFix #30 #33 and several other bugs and crashes.\\n\\n3.0\\n\\nUsbStream has been renamed to SysDVR-Client, if you have the old version on your pc, delete it before extracting the new zip.\\nRTSP Streaming has been implemented in both SysDVR and SysDVR-Client, this implies the following:\\nAudio and video are finally properly synchronized.\\nRandom stream desyncronization (lag) should be finally solved, it can still happen depending on the player and connection stability but pausing and unpausing the stream is enough to fix it.\\nNative support for many more players and other software such as OBS, live streaming from SysDVR has never been easier.\\nAs now streaming requires a single player instance the GoLive feature on discord works as expected.\\nUnfortunately due to RTSP caching latency may have slightly increased, some players allow to disable it but not all, in the end is a stability/syncronization vs delay compromise (if you prefer less delay most of the previous modes are still available but not recommended)\\nWhile RTSP works fine mostly, some players like vlc don't really play nice with it, mpv is still the recommended player\\nThe following streaming modes have been added:\\nDirect RTSP from SysDVR: it's possible to connect a player to the switch in the local network without any extra setup. This means you don't even need SysDVR-client, just type your switch ip address in mpv on your phone/pc and you're good to go !\\nTCP Bridge: video and audio data is sent via network to UsbStream and it's relayed over RTSP (this has a few advantages over Direct RTSP as explained in the guide)\\nRTSP mode in UsbStream: video and audio data are sent over USB and streamed via RTSP on the local pc\\nThe old TCP streaming mode has been removed in favor of TCP bridge, it had major syncronization issues, in case you still need it it's still available in older versions.\\nFixed a few issues reported on GitHub\\nSince there have been some major changes the guide in the readme has been rewritten, please be sure to read it again to use the new modes\\n\\n2.0\\n\\nThis update addresses most of the issues reported since the first release, in particular:\\n\\nThe Network and USB versions have been merged in a single sysmodule, the zip includes an homebrew to set the streaming mode without having to reboot.\\nThis also allows to temporarily disable the USB stream so you can launch other homebrews like nxmtp or GoldLeaf (solves #5)\\nAs low memory usage is important to some users an USB-Only version is still provided, this however does not support the settings app and you have to manually remove it and reboot to use an homebrew requiring USB access.\\nFixed the annoying \"10 minutes bug\" #2\\nAdded UsbStreamGUI (Windows only), a graphical launcher for UsbStream for less experienced users\\nMinor changes to UsbStream to help troubleshoot issues\\nThe guide in readme has been updated to include latest chages, be sure to check it out."
}