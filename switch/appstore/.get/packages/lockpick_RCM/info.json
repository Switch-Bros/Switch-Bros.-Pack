{
  "title": "Lockpick_RCM",
  "author": "shchmue",
  "category": "advanced",
  "version": "1.9.10",
  "url": "https://github.com/shchmue/Lockpick_RCM/releases",
  "license": "GPLv2",
  "description": "encryption key derivation bare metal RCM",
  "details": "Description\\n\\nLockpick_RCM is a bare metal Nintendo Switch payload that derives encryption keys for use in Switch file handling software like hactool, hactoolnet/LibHac, ChoiDujour, etc. without booting Horizon OS.\\n\\nDue to changes imposed by firmware 7.0.0, Lockpick homebrew can no longer derive the latest keys. In the boot-time environment however, there are fewer limitations. That means the new keys are finally easy to dump!\\n\\nUsage\\n\\nLaunch Lockpick_RCM.bin using your favorite payload injector\\nUpon completion, keys will be saved to /switch/prod.keys on SD\\nIf the console has Firmware 7.x, the /sept/ folder from Atmosphère or Kosmos release zip containing both sept-primary.bin and sept-secondary.enc must be present on SD or else only keyblob master key derivation is possible (ie. up to master_key_05 only)\\nBig thanks to CTCaer\\nFor Hekate and all the advice while developing this!\\n\\nKnown Issues\\n\\nChainloading from SX will hang immediately due to quirks in their hwinit code, please launch payload directly",
  "changelog": "1.9.10\\n\\nNew firmware is out and it brings the master_key_0f generation.\\n\\n1.9.9\\n\\nLockpick_RCM now supports dumping keys through firmware 15.0.0.\\n\\nAlso added SSL RSA key dumping for those who wish to dump and use the console certificate.\\n\\nRefactored crypto ops to more closely match what happens in-OS. Lockpick_RCM formerly used some patterns that were different and thus hard to maintain.\\n\\nVarious refactoring and other improvements to readability. More key checks to make sure good data is being saved.\\n\\n1.9.8\\n\\nVersion 1.9.8 is here with a new feature:\\n\\n- Added Amiibo key dump option to main menu - this saves the key_retail.bin file that Amiibo tooling requires to the sd:/switch folder.\\n\\nAnd quality of life improvements:\\n\\n- Moved Mariko partial AES key results dumping option to main menu. Since this option renders boot and keydumping impossible and it's not useful to the vast majority of users, it has been moved to the main menu as its own isolated option, a verbose warning about needing to reboot after dumping has been added and all dumping options get greyed out after running it.\\n- Lockpick_RCM now saves the console-unique ETicket RSA-2048 keypair that is used to validate personalized tickets in the keyfile under the name eticket_rsa_keypair. This was requested so that Switch emulators can more easily support validating personalized game dumps.\\n\\n1.9.7\\n\\nFirmware 14.0.0 brings new master keys, so Lockpick_RCM is updated to support them!\\n\\nYou do not need to update your console to derive them. Just run Lockpick_RCM v1.9.7.\\n\\nAlso pushed a minor bugfix that didn't affect existing codepaths but could in the future.\\n\\n1.9.6\\n\\nand update bdk to that of hekate 5.6.1\\n\\n1.9.5\\n\\nLockpick_RCM now supports the new key generation introduced in firmware 13.0.0\\n\\nAdditionally, the following was changed:\\n\\n- added a screenshot button for after the keys finish dumping. Press VOL UP if you wish to save a screenshot, especially when submitting an issue to me\\n- reboot to Hekate option added to main menu if present on SD\\n- fixed Mariko dumping both sets of prod/dev keys, this was accidental and the other keyset is erroneous. Erista consoles can still dump both\\n- no longer require successful EMMC mount to derive keys since it's all done via embedded keygen\\n- retry keygen on failure for rare edge cases\\n- fix name of bis_key_source in key file\\n- set regular RAM clocks while idle, only OC during run\\n- more verbose errors if encountered when dumping partial keys on Mariko\\n- embed version in payload so other payloads can check\\n\\n1.9.4\\n\\nThis release bundles the Atmosphere keygen payload to allow for full keygen conducted by Lockpick_RCM with no Sept, no reboots, and faster runtime.\\n\\nAs a result, all Erista consoles will dump the latest key set regardless of NAND contents.\\n\\nAlso, due to the way keygen works, all Erista consoles will produce both dev.keys and prod.keys which may be useful to some users for research and archival purposes.\\n\\nMariko keyslots are now validated thoroughly before saving partial keys for brute force purposes. Partial keys are also produced for AES class keys in slots 0-11. These aren't used for anything by the console or any tools, but are included for completeness' sake. See readme for details.\\n\\n1.9.3\\n\\nAdded an agnostic methodology for handling future firmware versions which use the same master key generation and key derivation method.\\n\\n1.9.2\\n\\nUpdated to support version 12.0.2, which again introduces no new keys but has a new pkg1 version\\n\\nUpdated bdk/drivers to reach parity with hekate v5.5.6\\n\\nImplemented payload compression to allow for easier growth in the future\\n\\nRe-enabled the battery status bar\\n\\n1.9.1\\n\\nThere are no new keys, Lockpick_RCM just required an update to dump keys after updating\\n\\n1.9.0\\n\\nBig release! If you can load payloads on your Mariko or patched Erista console, you can now dump keys with Lockpick_RCM!\\n\\nThanks loads to CTCaer, SciresM, Shadów, balika011, and averne for information, advice, and help testing!\\n\\n1.8.5\\n\\nProvides basic support for version 11.0.0\\n\\nNOTE: Mariko is not supported at this time\\n\\nv1.8.4\\n\\nSept issued a breaking change to master key slot, now Lockpick_RCM supports the new and old versions both.\\n\\nv1.8.3\\n\\nImproved the general aes-xts crypto function to match the diskio algorithm (only 2 total aes-ecb calls instead of one per block) and perform the xor operations in 32-bit chunks. Also updated for gcc 10 and merged latest Hekate commits.\\n\\nSysmmc runs get a slight speed improvement, emummc gets a large speed improvement, especially file-based.\\n\\nAlso now supports parsing sept from sept-secondary if FSS0 entry is present in hekate_ipl.ini\\n\\nv1.8.2\\n\\nVersion 10.0.0, in addition to having new key offsets, expands the 80000000000000E1 common ticket save. This revealed a bug in remap init code, now fixed. Also fixed a bug caused by missing ES saves.\\n\\nv1.8.1.\\n\\nFixed BIS key off-by-one index issue for new consoles, fixed titlekey regression\\n\\nv1.8.0\\n\\nLockpick_RCM now supports firmware 9.1.0. Like in update 9.0.0, the root keys didn't change and so consoles on any version from 8.1.0-9.1.0 will dump all current keys.\\n\\nMinerva should be updated on SD to use its performance benefits. If the old library is present, Minerva will not activate.\\n\\nAlso corrected bug where SD seed verification vector was being read from sysnand even when dumping keys from emunand.\\n\\n\\n\\nv1.7.1\\n\\nFixes freezes under certain conditions, now has a Payload menu like Hekate's that allows chainloading to payloads in bootloader/payloads, atmosphere/reboot_payload.bin, or ReiNX.bin\\n\\nv1.7.0\\n\\nLockpick_RCM now parses the ES save files correctly for much quicker Titlekey extraction, ie linear in number of titlekeys rather than checking the whole save container\\n\\nHuge thanks to @Thealexbarney for an excellent source of truth on save parsing in the form of https://github.com/Thealexbarney/LibHac/ and for answering so many questions about it on top of all the hard work reversing FS and constantly improving LibHac\\n\\nAlso corrected a major bug in Hekate's heap code (please do the same if you use Hekate code in your own projects! ref CTCaer/hekate#300 ) and eliminated a few of my own memory leaks, both guaranteed and potential\\n\\nv1.6.4\\n\\nFile write validation is sufficient\\n\\nv1.6.3\\n\\nFixes bad directory check preventing writing keyfiles\\n\\nv1.6.1\\n\\nWhen I added Minerva and titlekey dumping I moved the key save text buffer from a zero-initialized stack array to the heap, and forgot to zero-initialize, followed by many perilous calls to strlen on the buffer which wasn't guaranteed any nulls to terminate! This resulted in a hang while saving keys and/or corrupt key files\\n\\nv1.6.0\\n\\nAdded titlekey dumping! With CTCaer's Minerva it runs in 20-25s depending on sys/emunand, or 40-50s without.\\nAlso added key generation number display to main menu to help guide your sysnand/emunand dumping decision.\\n\\nv1.5.0\\n\\nNow lets users choose whether to dump keys from sysNAND or emuMMC. Also a fix for BIS key generation on consoles released after firmware 5.0.0 (presently it's rare that these have code execution, but eventually this will apply to more).\\n\\nv1.4.0\\n\\nAdded Keys for 9.0.0\\nAlso added BPMP overclock\\n\\nv1.3\\n\\nSupports new keys if run on firmware 8.1.0.\\n\\nv1.2\\n\\nThe main visible differences are that if it's run on a dev console it will correctly name the key file dev.keys and if an upgrade or downgrade fails to install a matching set of package1 and package2, Lockpick_RCM will try every key it can instead of giving up on finding FS keys.\\n\\nv1.1.1\\n\\nFix smmu emulation for tsec on 6.2.0\\n\\nv1.1\\n\\nNow includes support for firmware 8.0.0 along with a big speed increase thanks to advice from CTCaer. Interpolated recent hekate bugfixes as well"
}